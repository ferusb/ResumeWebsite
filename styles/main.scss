// =============================================================================
// Main SCSS Entry Point
// Brian Ferus Portfolio - Professional Sass Architecture
// =============================================================================

// 1. CONFIGURATION & UTILITIES
// Import variables first - they're used by everything else
@import 'utils/variables';

// Import mixins second - they use variables
@import 'utils/mixins';

// 2. BASE STYLES
// Reset and normalize across browsers
@import 'base/reset';

// Typography foundation
@import 'base/typography';

// 3. COMPONENTS
// Reusable component styles
@import 'components/buttons';
@import 'components/cards';

// 4. THEMES
// Theme-specific overrides and styles
@import 'themes/purple';

// =============================================================================
// GLOBAL UTILITY CLASSES
// =============================================================================

// Container
.container {
  @include container(1280px);

  &.narrow {
    @include container(960px);
  }

  &.wide {
    @include container(1600px);
  }
}

// Spacing utilities
@each $size, $value in $spacing {
  .p-#{$size} {
    padding: $value;
  }

  .pt-#{$size} {
    padding-top: $value;
  }

  .pr-#{$size} {
    padding-right: $value;
  }

  .pb-#{$size} {
    padding-bottom: $value;
  }

  .pl-#{$size} {
    padding-left: $value;
  }

  .px-#{$size} {
    padding-left: $value;
    padding-right: $value;
  }

  .py-#{$size} {
    padding-top: $value;
    padding-bottom: $value;
  }

  .m-#{$size} {
    margin: $value;
  }

  .mt-#{$size} {
    margin-top: $value;
  }

  .mr-#{$size} {
    margin-right: $value;
  }

  .mb-#{$size} {
    margin-bottom: $value;
  }

  .ml-#{$size} {
    margin-left: $value;
  }

  .mx-#{$size} {
    margin-left: $value;
    margin-right: $value;
  }

  .my-#{$size} {
    margin-top: $value;
    margin-bottom: $value;
  }

  .gap-#{$size} {
    gap: $value;
  }
}

// Flexbox utilities
.flex {
  display: flex;
}

.flex-center {
  @include flex-center;
}

.flex-between {
  @include flex-between;
}

.flex-column {
  @include flex-column;
}

.flex-wrap {
  flex-wrap: wrap;
}

.flex-1 {
  flex: 1;
}

.items-start {
  align-items: flex-start;
}

.items-center {
  align-items: center;
}

.items-end {
  align-items: flex-end;
}

.justify-start {
  justify-content: flex-start;
}

.justify-center {
  justify-content: center;
}

.justify-end {
  justify-content: flex-end;
}

.justify-between {
  justify-content: space-between;
}

// Grid utilities
.grid {
  display: grid;
}

.grid-cols-1 {
  grid-template-columns: repeat(1, 1fr);
}

.grid-cols-2 {
  grid-template-columns: repeat(2, 1fr);
}

.grid-cols-3 {
  grid-template-columns: repeat(3, 1fr);
}

.grid-cols-4 {
  grid-template-columns: repeat(4, 1fr);
}

.grid-auto-fill {
  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
}

.grid-auto-fit {
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
}

// Border radius utilities
@each $size, $value in $radius {
  .rounded-#{$size} {
    border-radius: $value;
  }
}

// Shadow utilities
.shadow-sm {
  box-shadow: $shadow-sm;
}

.shadow-md {
  box-shadow: $shadow-md;
}

.shadow-lg {
  box-shadow: $shadow-lg;
}

.shadow-xl {
  box-shadow: $shadow-xl;
}

.shadow-2xl {
  box-shadow: $shadow-2xl;
}

// Z-index utilities
@each $layer, $value in $z-layers {
  .z-#{$layer} {
    z-index: $value;
  }
}

// Position utilities
.relative {
  position: relative;
}

.absolute {
  position: absolute;
}

.fixed {
  position: fixed;
}

.sticky {
  position: sticky;
}

.absolute-center {
  @include absolute-center;
}

.absolute-fill {
  @include absolute-fill;
}

// Display utilities
.block {
  display: block;
}

.inline-block {
  display: inline-block;
}

.inline {
  display: inline;
}

.hidden {
  display: none;
}

// Visibility utilities
.visible {
  visibility: visible;
}

.invisible {
  visibility: hidden;
}

// Overflow utilities
.overflow-hidden {
  overflow: hidden;
}

.overflow-auto {
  overflow: auto;
}

.overflow-scroll {
  overflow: scroll;
}

// Cursor utilities
.cursor-pointer {
  cursor: pointer;
}

.cursor-not-allowed {
  cursor: not-allowed;
}

// User select utilities
.select-none {
  user-select: none;
}

.select-text {
  user-select: text;
}

.select-all {
  user-select: all;
}

// Opacity utilities
@for $i from 0 through 10 {
  .opacity-#{$i * 10} {
    opacity: $i * 0.1;
  }
}

// Width utilities
.w-full {
  width: 100%;
}

.w-auto {
  width: auto;
}

.w-screen {
  width: 100vw;
}

.h-full {
  height: 100%;
}

.h-auto {
  height: auto;
}

.h-screen {
  height: 100vh;
}

// Min/Max width utilities
.max-w-xs {
  max-width: 320px;
}

.max-w-sm {
  max-width: 480px;
}

.max-w-md {
  max-width: 768px;
}

.max-w-lg {
  max-width: 1024px;
}

.max-w-xl {
  max-width: 1280px;
}

.max-w-2xl {
  max-width: 1536px;
}

.max-w-full {
  max-width: 100%;
}

// Animation utilities
.transition {
  @include transition(all);
}

.transition-fast {
  @include transition(all, 'fast');
}

.transition-slow {
  @include transition(all, 'slow');
}

.interactive {
  @include interactive;
}

// Accessibility utilities
.sr-only {
  @include sr-only;
}

.focus-visible {
  @include focus-visible;
}

// Loading state
.loading {
  cursor: wait;
  pointer-events: none;
  opacity: 0.6;
}

// Disabled state
.disabled {
  opacity: 0.5;
  cursor: not-allowed;
  pointer-events: none;
}

// Glass morphism utility
.glass {
  @include glass;
}

// Gradient utilities
.gradient-purple {
  @include gradient-purple;
}

.gradient-text-purple {
  @include gradient-text-purple;
}

// Glow utilities
.glow {
  @include glow($color-purple-600);
}

.text-glow {
  @include text-glow($color-purple-600);
}

// Responsive visibility
.show-mobile {
  display: none;

  @include respond-to('sm') {
    display: block;
  }
}

.hide-mobile {
  display: block;

  @include respond-to('sm') {
    display: none;
  }
}

.show-tablet {
  display: none;

  @include respond-to('md') {
    display: block;
  }
}

.hide-tablet {
  display: block;

  @include respond-to('md') {
    display: none;
  }
}

.show-desktop {
  display: none;

  @include respond-to('lg') {
    display: block;
  }
}

.hide-desktop {
  display: block;

  @include respond-to('lg') {
    display: none;
  }
}

// =============================================================================
// CUSTOM ANIMATIONS
// =============================================================================

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

@keyframes slideInUp {
  from {
    transform: translateY(20px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes slideInDown {
  from {
    transform: translateY(-20px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes slideInLeft {
  from {
    transform: translateX(-20px);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes slideInRight {
  from {
    transform: translateX(20px);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes zoomIn {
  from {
    transform: scale(0.95);
    opacity: 0;
  }
  to {
    transform: scale(1);
    opacity: 1;
  }
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@keyframes bounce {
  0%,
  100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-10px);
  }
}

// Animation classes
.animate-fadeIn {
  animation: fadeIn 0.5s ease-in-out;
}

.animate-slideInUp {
  animation: slideInUp 0.5s ease-out;
}

.animate-slideInDown {
  animation: slideInDown 0.5s ease-out;
}

.animate-slideInLeft {
  animation: slideInLeft 0.5s ease-out;
}

.animate-slideInRight {
  animation: slideInRight 0.5s ease-out;
}

.animate-zoomIn {
  animation: zoomIn 0.5s ease-out;
}

.animate-spin {
  animation: spin 1s linear infinite;
}

.animate-bounce {
  animation: bounce 1s ease-in-out infinite;
}
