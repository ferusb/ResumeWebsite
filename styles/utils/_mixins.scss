// =============================================================================
// SCSS Mixins - Reusable Patterns
// =============================================================================

// Responsive Breakpoints
@mixin respond-to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    $value: map-get($breakpoints, $breakpoint);
    @media (min-width: $value) {
      @content;
    }
  } @else {
    @warn "Unknown breakpoint: #{$breakpoint}";
  }
}

// Flexbox Utilities
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

// Typography
@mixin font-size($size) {
  @if map-has-key($font-sizes, $size) {
    font-size: map-get($font-sizes, $size);
  }
}

@mixin font-weight($weight) {
  @if map-has-key($font-weights, $weight) {
    font-weight: map-get($font-weights, $weight);
  }
}

@mixin truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin line-clamp($lines) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

// Gradients
@mixin gradient-purple {
  background: linear-gradient(135deg, $color-purple-600, $color-purple-400);
}

@mixin gradient-text-purple {
  background: linear-gradient(135deg, $color-purple-600, $color-violet-500);
  background-clip: text;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}

@mixin gradient-hover($color1, $color2) {
  position: relative;
  overflow: hidden;

  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba($color1, 0.3), transparent);
    transition: left 0.5s ease;
  }

  &:hover::before {
    left: 100%;
  }
}

// Shadows & Glows
@mixin glow($color, $intensity: 0.5) {
  box-shadow: 0 0 20px rgba($color, $intensity);
}

@mixin text-glow($color, $intensity: 0.6) {
  text-shadow: 0 0 20px rgba($color, $intensity);
}

@mixin elevate($level: 'md') {
  @if $level == 'sm' {
    box-shadow: $shadow-sm;
  } @else if $level == 'md' {
    box-shadow: $shadow-md;
  } @else if $level == 'lg' {
    box-shadow: $shadow-lg;
  } @else if $level == 'xl' {
    box-shadow: $shadow-xl;
  } @else if $level == '2xl' {
    box-shadow: $shadow-2xl;
  }
}

// Transitions
@mixin transition($properties: all, $duration: 'base', $timing: 'ease') {
  $duration-value: map-get($transition-durations, $duration);
  $timing-value: map-get($transition-timings, $timing);
  transition: $properties $duration-value $timing-value;
}

// Positioning
@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin absolute-fill {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

// Spacing
@mixin padding($size) {
  @if map-has-key($spacing, $size) {
    padding: map-get($spacing, $size);
  }
}

@mixin margin($size) {
  @if map-has-key($spacing, $size) {
    margin: map-get($spacing, $size);
  }
}

// Interactive States
@mixin interactive {
  cursor: pointer;
  user-select: none;
  @include transition(all, 'fast');

  &:hover {
    transform: translateY(-2px);
  }

  &:active {
    transform: translateY(0);
  }
}

// Glass Morphism
@mixin glass($blur: 12px, $opacity: 0.1) {
  background: rgba(255, 255, 255, $opacity);
  backdrop-filter: blur($blur);
  -webkit-backdrop-filter: blur($blur);
  border: 1px solid rgba(255, 255, 255, 0.2);
}

// Scrollbar Styling
@mixin custom-scrollbar($thumb-color, $track-color: transparent) {
  &::-webkit-scrollbar {
    width: 10px;
    height: 10px;
  }

  &::-webkit-scrollbar-track {
    background: $track-color;
  }

  &::-webkit-scrollbar-thumb {
    background: $thumb-color;
    border-radius: map-get($radius, 'base');

    &:hover {
      background: darken($thumb-color, 10%);
    }
  }
}

// Animations
@mixin pulse-animation($color, $duration: 2s) {
  animation: pulse-glow-#{unique-id()} $duration ease-in-out infinite;

  @keyframes pulse-glow-#{unique-id()} {
    0%, 100% {
      box-shadow: 0 0 20px rgba($color, 0.5);
    }
    50% {
      box-shadow: 0 0 40px rgba($color, 0.8);
    }
  }
}

// Accessibility
@mixin sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

@mixin focus-visible {
  &:focus-visible {
    outline: 2px solid $color-purple-600;
    outline-offset: 2px;
  }
}

// Z-Index Management
@mixin z-index($layer) {
  @if map-has-key($z-layers, $layer) {
    z-index: map-get($z-layers, $layer);
  }
}

// Container
@mixin container($max-width: 1280px) {
  width: 100%;
  max-width: $max-width;
  margin-left: auto;
  margin-right: auto;
  padding-left: map-get($spacing, 'md');
  padding-right: map-get($spacing, 'md');

  @include respond-to('lg') {
    padding-left: map-get($spacing, 'lg');
    padding-right: map-get($spacing, 'lg');
  }
}
